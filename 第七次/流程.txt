节点同步：(主节点，钱包节点，矿工节点)
1.准备3个终端，各自设置NODE_ID(3000,3001,3002)
2.在主节点中创建一个钱包,创建一个创世区块，将blockchain_3000.db备份到文件blockchain_genesis.db(给后面的钱包节点和挖矿节点作为初始区块备份用),并查看主节点的钱包余额是否为10
3.在钱包节点中主设置NODE_ID=3001,拷贝blockchain_genesis.db为blockchain_3001.db,创建4个钱包地址,并查看各自的余额是否为0
4.在主节点中，给钱包中的前2个地址分别转帐8,6个 带是立即挖矿-mine标识，查看主节点中的余额是16,2个钱包节点的余额是8,6，切换到钱包节点查询4个钱包余额仍是0，创世钱包余额为10
5.启动主节点，钱包节点，看是否进行数据同步，此时钱包节点用应该会接收到节点数据(发现数据不对，要考虑utxoreset，需要重置余额表数据才能准确)
6.注意事项:当钱包节点更新区块时，要更新数据里的"L"字段对应的最新hash值，并更新blockchain中的tip字段值，保存l和tip是最新的hash值
7.




流程
1.启动主节点，等待接收钱包节点或矿工节点的请求数据
2.启动钱包节点，并将bc=GetObjectBlockchain(3001),sendVersion("localhost:3000",bc)消息给主节点,里面的数据是：(包含12个字节长度+序列化(Version,locaalhost:3001,1))
3.主节点收到钱包节点发过来的消息后，通过handleVersion反序列化，分析 command，进入相应的分支处理,通过高度进行比较。如果如果高度小于钱包节点，则继续调用 sendVersion接口，主节点高度大于钱包节点，则sendGetBlocks(3000),否则sendVersion(3001,bc)
4.